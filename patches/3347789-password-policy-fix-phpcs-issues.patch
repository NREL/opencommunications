diff --git a/password_policy_history/password_policy_history.module b/password_policy_history/password_policy_history.module
index 0f32d8b971de379a4d673ad0eb331956e2106b59..5ab16c512eb9109d55af3e40ec72f45b5fa9ac55 100644
--- a/password_policy_history/password_policy_history.module
+++ b/password_policy_history/password_policy_history.module
@@ -29,7 +29,8 @@ function password_policy_history_user_update(AccountInterface $account) {
  *   The current user account.
  */
 function _password_policy_history_insert_password_hash(AccountInterface $account) {
-  if (empty($_POST['pass']['pass1']) || empty($_POST['pass']['pass2'])) {
+  $password = \Drupal::request()->request->get('pass');
+  if (empty($password['pass1']) || empty($password['pass2'])) {
     return;
   }
   $connection = Database::getConnection();
diff --git a/password_policy_history/tests/src/Unit/PasswordHistoryTest.php b/password_policy_history/tests/src/Unit/PasswordHistoryTest.php
index 26171fe48de668643a4e7066d8c7c8764b774b0a..53febadef595a3310daace7eab7eb55f27adc012 100644
--- a/password_policy_history/tests/src/Unit/PasswordHistoryTest.php
+++ b/password_policy_history/tests/src/Unit/PasswordHistoryTest.php
@@ -128,10 +128,13 @@ class PasswordHistoryTest extends UnitTestCase {
     return [['password']];
   }

+  /**
+   * Set ReflectionClass object.
+   */
   public function setProtectedProperty($object, $property, $value) {
     $reflection = new \ReflectionClass($object);
     $reflection_property = $reflection->getProperty($property);
-    $reflection_property->setAccessible(true);
+    $reflection_property->setAccessible(TRUE);
     $reflection_property->setValue($object, $value);
   }

diff --git a/src/Plugin/migrate/process/PolicyConfiguration.php b/src/Plugin/migrate/process/PolicyConfiguration.php
index 983a7e5809d9eade6cb202e66d0ff9addf4f8363..e57d79ed1d542cdfb52d58acc1a228075e272b03 100644
--- a/src/Plugin/migrate/process/PolicyConfiguration.php
+++ b/src/Plugin/migrate/process/PolicyConfiguration.php
@@ -124,7 +124,7 @@ class PolicyConfiguration extends ProcessPluginBase implements ContainerFactoryP
    * @param array $value
    *   The source value for the migration process plugin.
    */
-  private function transformV2(Row $row, &$value) {
+  private function transformV2(Row $row, array &$value) {
     $value['label'] = $row->getSourceProperty('name');
     $value['send_reset_email'] = (bool) $value['expire']['expire_enabled'];
     if ($value['expire']['expire_enabled'] == 1) {